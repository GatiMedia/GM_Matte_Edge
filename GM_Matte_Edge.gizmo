Group {
 name GM_Matte_Edge
 tile_color 0xcc9800ff
 selected true
 xpos 2270
 ypos -226
 addUserKnob {20 User}
 addUserKnob {26 in l "<b><font color=orange>Inside"}
 addUserKnob {41 in_1 l Size T proxy.in}
 addUserKnob {41 size_1 l Blur T Blur_IN.size}
 addUserKnob {41 which l Mix T Dissolve1.which}
 addUserKnob {26 out l "<b><font color=orange>Outside"}
 addUserKnob {41 out_1 l Size T proxy.out}
 addUserKnob {41 size_3 l Blur T Blur_OUT.size}
 addUserKnob {41 which_1 l Mix T Dissolve2.which}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {6 prem l Premult +STARTLINE}
 prem true
 addUserKnob {26 ""}
 addUserKnob {7 mix_all l Mix}
 mix_all 1
 addUserKnob {26 ""}
 addUserKnob {26 TEXT l "" +STARTLINE T "<font color=#808080 size=\"5\" >1.01 version</font>"}
 addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#808080 size=\"2\">GM_Matte EdgeÂ© by Attila Gasparetz</font>"}
}
 Input {
  inputs 0
  name Input
  tile_color 0x666666ff
  xpos -480
  ypos 302
 }
 Dot {
  name Dot14
  xpos -446
  ypos 378
 }
set Nec398a0 [stack 0]
 Dot {
  name Dot15
  xpos -556
  ypos 378
 }
set Nec3e1f0 [stack 0]
 Group {
  name key_chew
  help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
  tile_color 0x555555ff
  xpos -700
  ypos 518
  addUserKnob {20 Controls}
  addUserKnob {7 chew t "\t\t" R -200 200}
  chew {{parent.proxy.in}}
  addUserKnob {7 soften R 0 200}
  addUserKnob {6 matteMult +STARTLINE}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
set Nec4bb30 [stack 0]
  Dot {
   name Dot1
   xpos 324
   ypos -6
  }
set Nec504a0 [stack 0]
push $Nec504a0
  Invert {
   name Invert1
   xpos 180
   ypos 32
  }
push $Nec504a0
  Switch {
   inputs 2
   which {{"\[value parent.chew]>=0?0:1"}}
   name Switch1
   xpos 180
   ypos 86
  }
  Blur {
   size {{"(floor(abs(\[value parent.chew]))/4)+(floor(abs(\[value parent.chew]))/8)"}}
   name FgEdgeBlur
   xpos 180
   ypos 128
  }
  Grade {
   channels alpha
   multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1)}}
   black_clamp false
   name FgEdgeMult
   xpos 180
   ypos 176
  }
  Grade {
   channels alpha
   gamma {1 1 1 {JSplineVFake(floor(abs(parent.chew)))}}
   name FgEdgeGamma1
   selected true
   xpos 180
   ypos 224
   addUserKnob {20 User}
   addUserKnob {7 JSplineVFake}
   JSplineVFake {{curve l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
  }
set Nec85030 [stack 0]
  Merge2 {
   inputs 2
   operation minus
   name Merge1
   xpos 290
   ypos 230
  }
push $Nec85030
  Switch {
   inputs 2
   which {{"\[value parent.chew]>=0?0:1"}}
   name Switch2
   xpos 180
   ypos 278
  }
  Clamp {
   name Clamp2
   xpos 180
   ypos 320
  }
  Blur {
   size {{"(floor(abs(\[value parent.soften]))/4)+(floor(abs(\[value parent.soften]))/8)"}}
   name BlurResult
   xpos 180
   ypos 440
  }
push $Nec4bb30
  ShuffleCopy {
   inputs 2
   name ShuffleCopy1
   xpos -40
   ypos 446
  }
  Premult {
   name Premult1
   xpos -40
   ypos 494
   disable {{"1-\[value parent.matteMult]" i}}
  }
  Output {
   name Output1
   xpos -40
   ypos 566
  }
 end_group
push $Nec3e1f0
 Dissolve {
  inputs 2
  which 1
  name Dissolve2
  tile_color 0x555555ff
  xpos -590
  ypos 584
 }
 Blur {
  channels alpha
  name Blur_IN
  tile_color 0x666666ff
  xpos -590
  ypos 656
 }
 Dot {
  name Dot16
  xpos -556
  ypos 714
 }
push $Nec398a0
 Dot {
  name Dot8
  xpos -336
  ypos 378
 }
set Necf7370 [stack 0]
 Group {
  name key_chew1
  help "======== KeyChew beta ========\n=============================\n\nThis is a port of the KeyChew macro for Shake to Nuke.\n\nThere might be tiny differences on the results given in both apps. Some of them are caused by the internal algorithms of each app, and others by the way I faked the JSplineV\nexpression of Shake in Nuke. If you know a better way to solve this, let\nme know!!\n\n=============================\n             2009 Cuco Bures\n============================="
  tile_color 0x555555ff
  xpos -260
  ypos 518
  addUserKnob {20 Controls}
  addUserKnob {7 chew t "\t\t" R -200 200}
  chew {{-proxy.out}}
  addUserKnob {7 soften R 0 200}
  addUserKnob {6 matteMult +STARTLINE}
 }
  Input {
   inputs 0
   name Input
   xpos 0
  }
set Ned04ce0 [stack 0]
  Dot {
   name Dot1
   xpos 366
   ypos 5
  }
set Ned09650 [stack 0]
push $Ned09650
  Invert {
   name Invert1
   xpos 177
   ypos 34
  }
push $Ned09650
  Switch {
   inputs 2
   which {{"\[value parent.chew]>=0?0:1"}}
   name Switch1
   xpos 177
   ypos 87
  }
  Blur {
   size {{"(floor(abs(\[value parent.chew]))/4)+(floor(abs(\[value parent.chew]))/8)" i}}
   name FgEdgeBlur
   xpos 177
   ypos 111
  }
  Grade {
   channels alpha
   multiply {1 1 1 {max(FgEdgeBlur.size*1.5,1) i}}
   black_clamp false
   name FgEdgeMult
   xpos 177
   ypos 165
  }
  Grade {
   channels alpha
   gamma {1 1 1 {JSplineVFake(floor(abs(parent.chew))) i}}
   name FgEdgeGamma1
   xpos 177
   ypos 213
   addUserKnob {20 User}
   addUserKnob {7 JSplineVFake}
   JSplineVFake {{curve i l 0.9958 k x5 0.95 0.8 x20 0.5 x40 0.3 x80 0.2 l x200 0.1}}
  }
set Ned3e1d0 [stack 0]
  Merge2 {
   inputs 2
   operation minus
   name Merge1
   xpos 332
   ypos 218
  }
push $Ned3e1d0
  Switch {
   inputs 2
   which {{"\[value parent.chew]>=0?0:1"}}
   name Switch2
   xpos 177
   ypos 284
  }
  Clamp {
   name Clamp2
   xpos 177
   ypos 323
  }
  Blur {
   size {{"(floor(abs(\[value parent.soften]))/4)+(floor(abs(\[value parent.soften]))/8)"}}
   name BlurResult
   xpos 177
   ypos 446
  }
push $Ned04ce0
  ShuffleCopy {
   inputs 2
   name ShuffleCopy1
   xpos 0
   ypos 451
  }
  Premult {
   name Premult1
   xpos 0
   ypos 486
   disable {{"1-\[value parent.matteMult]" i}}
  }
  Output {
   name Output1
   xpos 0
   ypos 556
  }
 end_group
push $Necf7370
 Dissolve {
  inputs 2
  which 1
  name Dissolve1
  tile_color 0x555555ff
  xpos -370
  ypos 584
 }
 Blur {
  channels alpha
  name Blur_OUT
  tile_color 0x666666ff
  xpos -370
  ypos 656
 }
 Dot {
  name Dot18
  xpos -336
  ypos 714
 }
 ChannelMerge {
  inputs 2
  operation xor
  name ChannelMerge
  tile_color 0x666666ff
  xpos -480
  ypos 698
 }
 Dot {
  name Dot2
  xpos -446
  ypos 834
 }
push $Necf7370
 Dot {
  name Dot1
  xpos 104
  ypos 378
 }
 Dissolve {
  inputs 2
  which {{parent.mix_all}}
  name Dissolve3
  tile_color 0x555555ff
  xpos 70
  ypos 824
 }
 Premult {
  name Premult1
  tile_color 0x555555ff
  xpos 70
  ypos 950
  disable {{"parent.prem == 0"}}
 }
 Output {
  name Output
  tile_color 0x666666ff
  xpos 70
  ypos 998
 }
 NoOp {
  inputs 0
  name proxy
  tile_color 0x666666ff
  xpos -480
  ypos 518
  addUserKnob {20 User}
  addUserKnob {7 in l Size R 0 100}
  in 10
  addUserKnob {7 out l Size R 0 100}
  out 10
 }
end_group
